<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yan.crawler.persist.dao.TrackDao">
    <resultMap id="trackResult" type="Track">
        <id property="id" column="id"/>
        <result property="artist" column="artist"/>
        <result property="name" column="name"/>
        <result property="mbid" column="mbid"/>
        <result property="url" column="url"/>
        <result property="images" column="images"/>
        <result property="tags" column="tags"/>
    </resultMap>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT IGNORE INTO track(artist,name,mbid,url,images)
        VALUES
        <foreach collection="list" item="track" index="index" separator=",">
            (#{track.artist},#{track.name},#{track.mbid},#{track.url},#{track.images})
        </foreach>
    </insert>

    <update id="updateTag">
        UPDATE track
        SET
            tags = #{param3}
        WHERE
            artist = #{param1} AND name = #{param2}
    </update>

    <select id="getTrack" resultMap="trackResult">
        SELECT * FROM track LIMIT #{index},10
    </select>

    <insert id="insertUserTrack">
        INSERT IGNORE INTO user_track(userID,username,trackID,artist,trackname,duration)
        VALUES
        <foreach collection="tracks" item="track" separator=",">
            (#{param1.id},#{param1.name},#{track.id},#{track.artist},#{track.name},#{track.duration})
        </foreach>
    </insert>

    <select id="count" resultType="int">
        SELECT COUNT(*) FROM track
    </select>

    <update id="updateTrackTag" parameterType="List">
        UPDATE track
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="tags = case" suffix="end,">
                <foreach collection="tracks" item="track" index="index">
                    WHEN artist = #{track.artist} AND name = #{track.name} THEN #{track.tags}
                </foreach>
            </trim>
        </trim>
    </update>

    <delete id="deleteTrack" parameterType="List">
        DELETE FROM track
        WHERE
        <foreach collection="tracks" index="index" item="track" separator="or">
            ( artist = #{track.artist} AND name = #{track.name})
        </foreach>
    </delete>

    <delete id="deleteUserTrack" parameterType="List">
        DELETE FROM user_track
        WHERE
        <foreach collection="tracks" item="track" separator="or">
            (artist = #{track.artist} AND trackname = #{track.name})
        </foreach>
    </delete>
</mapper>